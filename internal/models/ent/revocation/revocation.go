// Code generated by ent, DO NOT EDIT.

package revocation

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the revocation type in the database.
	Label = "revocation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "serial"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// FieldExpiry holds the string denoting the expiry field in the database.
	FieldExpiry = "expiry"
	// FieldRevoked holds the string denoting the revoked field in the database.
	FieldRevoked = "revoked"
	// Table holds the table name of the revocation in the database.
	Table = "revocations"
)

// Columns holds all SQL columns for revocation fields.
var Columns = []string{
	FieldID,
	FieldReason,
	FieldInfo,
	FieldExpiry,
	FieldRevoked,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultReason holds the default value on creation for the "reason" field.
	DefaultReason int
	// DefaultRevoked holds the default value on creation for the "revoked" field.
	DefaultRevoked func() time.Time
)

// OrderOption defines the ordering options for the Revocation queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByReason orders the results by the reason field.
func ByReason(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReason, opts...).ToFunc()
}

// ByInfo orders the results by the info field.
func ByInfo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInfo, opts...).ToFunc()
}

// ByExpiry orders the results by the expiry field.
func ByExpiry(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiry, opts...).ToFunc()
}

// ByRevoked orders the results by the revoked field.
func ByRevoked(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRevoked, opts...).ToFunc()
}
